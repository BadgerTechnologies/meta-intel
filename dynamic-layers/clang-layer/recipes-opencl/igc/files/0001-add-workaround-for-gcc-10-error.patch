From 8435bfb432282bdb900492f479233d2772f57f7c Mon Sep 17 00:00:00 2001
From: 8tab <tab.debugteam@gmail.com>
Date: Thu, 21 May 2020 14:21:58 +0200
Subject: [PATCH] Add workaround for gcc 10 internal compiler error
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There is a regression in recent gcc (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95241),
that make IGC fail to compile:
In file included from /home/tab/dev/external/oneapi/igc/visa/iga/IGALibrary/Models/Models.cpp:7:
/home/tab/dev/external/oneapi/igc/visa/iga/IGALibrary/Models/bxml/Model7P5.hpp:1258:34:   in ‘constexpr’ expansion of ‘iga::Field(((const char*)"MathFC"), 24, 4)’
/home/tab/dev/external/oneapi/igc/visa/iga/IGALibrary/Models/bxml/Model7P5.hpp:2085:5: internal compiler error: in tree_to_uhwi, at tree.h:4519
 2085 |     };
      |     ^

Upstream-Status: Submitted [https://github.com/intel/intel-graphics-compiler/pull/135]
Signed-off-by: Naveen Saini <naveen.kumar.saini@intel.com>
---
 visa/iga/IGALibrary/Backend/Native/Field.hpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/visa/iga/IGALibrary/Backend/Native/Field.hpp b/visa/iga/IGALibrary/Backend/Native/Field.hpp
index 4b97280b..04855576 100644
--- a/visa/iga/IGALibrary/Backend/Native/Field.hpp
+++ b/visa/iga/IGALibrary/Backend/Native/Field.hpp
@@ -150,8 +150,8 @@ namespace iga
         // a simple encoded field (single contiguous)
         constexpr Field(const char *_name, int offset, int length)
             : name(_name)
-            , fragments{Fragment(_name, offset, length)}
         {
+            fragments[0] = Fragment(_name, offset, length);
         }
         // a zero fill field or must-be-zero field
         constexpr Field(const char *_name,             int length,
-- 
2.17.1

