From 1d1b0f4eacb7d3875d7dd53e2df8dfca2031fa3a Mon Sep 17 00:00:00 2001
From: Aleksei Nurmukhametov <aleksei.nurmukhametov@intel.com>
Date: Tue, 28 Nov 2023 04:11:44 -0800
Subject: [PATCH] Fix return type of lParseOperator

When bison is used in -y mode that emulates POSIX Yacc, tokens are
defined as enums (under YYTOKENTYPE ifdef) or as int via macro
definitions. Defining return type as yytokentype causes compile error:
invalid conversion from 'int' to 'yytokentype'. To avoid it, return int
as we do with lParseInteger and lParseFP.

Upstream-Status: Submitted [https://github.com/ispc/ispc/pull/2709]

Signed-off-by: Aleksei Nurmukhametov <aleksei.nurmukhametov@intel.com>
Signed-off-by: Naveen Saini <naveen.kumar.saini@intel.com>
---
 src/lex.ll | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/lex.ll b/src/lex.ll
index f9e47578..0279831d 100644
--- a/src/lex.ll
+++ b/src/lex.ll
@@ -20,6 +20,7 @@ using namespace ispc;
 static uint64_t lParseBinary(const char *ptr, SourcePos pos, char **endPtr);
 static int lParseInteger(bool dotdotdot);
 static int lParseFP();
+static int lParseOperator(const char *ptr);
 static void lCComment(SourcePos *);
 static void lCppComment(SourcePos *);
 static void lNextValidChar(SourcePos *, char const*&);
@@ -29,7 +30,6 @@ static bool lConsumePragma(YYSTYPE *, SourcePos *);
 static void lHandleCppHash(SourcePos *);
 static void lStringConst(YYSTYPE *, SourcePos *);
 static double lParseHexFloat(const char *ptr);
-static yytokentype lParseOperator(const char *ptr);
 extern const char *RegisterDependency(const std::string &fileName);
 
 #define YY_USER_ACTION \
@@ -1162,7 +1162,7 @@ lParseHexFloat(const char *ptr) {
 
 /** Parse an operator.
 */
-static yytokentype
+static int
 lParseOperator(const char *ptr) {
     yylval.stringVal = new std::string(ptr);
     if (m->symbolTable->LookupFunctionTemplate(yytext))
-- 
2.37.3

